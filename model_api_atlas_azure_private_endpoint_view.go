/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasAzurePrivateEndpointView Group of Private Endpoint settings.
type ApiAtlasAzurePrivateEndpointView struct {
	// Flag that indicates whether MongoDB Cloud received a request to remove the specified private endpoint from the private endpoint service.
	DeleteRequested *bool `json:"deleteRequested,omitempty"`
	// Error message returned when requesting private connection resource. The resource returns `null` if the request succeeded.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Human-readable label that MongoDB Cloud generates that identifies the private endpoint connection.
	PrivateEndpointConnectionName *string `json:"privateEndpointConnectionName,omitempty"`
	// IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
	PrivateEndpointIPAddress *string `json:"privateEndpointIPAddress,omitempty"`
	// Unique string that identifies the Azure private endpoint's network interface that someone added to this private endpoint service.
	PrivateEndpointResourceId *string `json:"privateEndpointResourceId,omitempty"`
	// State of the Azure Private Link Service connection when MongoDB Cloud received this request.
	Status *string `json:"status,omitempty"`
}

// NewApiAtlasAzurePrivateEndpointView instantiates a new ApiAtlasAzurePrivateEndpointView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasAzurePrivateEndpointView() *ApiAtlasAzurePrivateEndpointView {
	this := ApiAtlasAzurePrivateEndpointView{}
	return &this
}

// NewApiAtlasAzurePrivateEndpointViewWithDefaults instantiates a new ApiAtlasAzurePrivateEndpointView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasAzurePrivateEndpointViewWithDefaults() *ApiAtlasAzurePrivateEndpointView {
	this := ApiAtlasAzurePrivateEndpointView{}
	return &this
}

// GetDeleteRequested returns the DeleteRequested field value if set, zero value otherwise.
func (o *ApiAtlasAzurePrivateEndpointView) GetDeleteRequested() bool {
	if o == nil || isNil(o.DeleteRequested) {
		var ret bool
		return ret
	}
	return *o.DeleteRequested
}

// GetDeleteRequestedOk returns a tuple with the DeleteRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePrivateEndpointView) GetDeleteRequestedOk() (*bool, bool) {
	if o == nil || isNil(o.DeleteRequested) {
    return nil, false
	}
	return o.DeleteRequested, true
}

// HasDeleteRequested returns a boolean if a field has been set.
func (o *ApiAtlasAzurePrivateEndpointView) HasDeleteRequested() bool {
	if o != nil && !isNil(o.DeleteRequested) {
		return true
	}

	return false
}

// SetDeleteRequested gets a reference to the given bool and assigns it to the DeleteRequested field.
func (o *ApiAtlasAzurePrivateEndpointView) SetDeleteRequested(v bool) {
	o.DeleteRequested = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *ApiAtlasAzurePrivateEndpointView) GetErrorMessage() string {
	if o == nil || isNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePrivateEndpointView) GetErrorMessageOk() (*string, bool) {
	if o == nil || isNil(o.ErrorMessage) {
    return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ApiAtlasAzurePrivateEndpointView) HasErrorMessage() bool {
	if o != nil && !isNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *ApiAtlasAzurePrivateEndpointView) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetPrivateEndpointConnectionName returns the PrivateEndpointConnectionName field value if set, zero value otherwise.
func (o *ApiAtlasAzurePrivateEndpointView) GetPrivateEndpointConnectionName() string {
	if o == nil || isNil(o.PrivateEndpointConnectionName) {
		var ret string
		return ret
	}
	return *o.PrivateEndpointConnectionName
}

// GetPrivateEndpointConnectionNameOk returns a tuple with the PrivateEndpointConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePrivateEndpointView) GetPrivateEndpointConnectionNameOk() (*string, bool) {
	if o == nil || isNil(o.PrivateEndpointConnectionName) {
    return nil, false
	}
	return o.PrivateEndpointConnectionName, true
}

// HasPrivateEndpointConnectionName returns a boolean if a field has been set.
func (o *ApiAtlasAzurePrivateEndpointView) HasPrivateEndpointConnectionName() bool {
	if o != nil && !isNil(o.PrivateEndpointConnectionName) {
		return true
	}

	return false
}

// SetPrivateEndpointConnectionName gets a reference to the given string and assigns it to the PrivateEndpointConnectionName field.
func (o *ApiAtlasAzurePrivateEndpointView) SetPrivateEndpointConnectionName(v string) {
	o.PrivateEndpointConnectionName = &v
}

// GetPrivateEndpointIPAddress returns the PrivateEndpointIPAddress field value if set, zero value otherwise.
func (o *ApiAtlasAzurePrivateEndpointView) GetPrivateEndpointIPAddress() string {
	if o == nil || isNil(o.PrivateEndpointIPAddress) {
		var ret string
		return ret
	}
	return *o.PrivateEndpointIPAddress
}

// GetPrivateEndpointIPAddressOk returns a tuple with the PrivateEndpointIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePrivateEndpointView) GetPrivateEndpointIPAddressOk() (*string, bool) {
	if o == nil || isNil(o.PrivateEndpointIPAddress) {
    return nil, false
	}
	return o.PrivateEndpointIPAddress, true
}

// HasPrivateEndpointIPAddress returns a boolean if a field has been set.
func (o *ApiAtlasAzurePrivateEndpointView) HasPrivateEndpointIPAddress() bool {
	if o != nil && !isNil(o.PrivateEndpointIPAddress) {
		return true
	}

	return false
}

// SetPrivateEndpointIPAddress gets a reference to the given string and assigns it to the PrivateEndpointIPAddress field.
func (o *ApiAtlasAzurePrivateEndpointView) SetPrivateEndpointIPAddress(v string) {
	o.PrivateEndpointIPAddress = &v
}

// GetPrivateEndpointResourceId returns the PrivateEndpointResourceId field value if set, zero value otherwise.
func (o *ApiAtlasAzurePrivateEndpointView) GetPrivateEndpointResourceId() string {
	if o == nil || isNil(o.PrivateEndpointResourceId) {
		var ret string
		return ret
	}
	return *o.PrivateEndpointResourceId
}

// GetPrivateEndpointResourceIdOk returns a tuple with the PrivateEndpointResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePrivateEndpointView) GetPrivateEndpointResourceIdOk() (*string, bool) {
	if o == nil || isNil(o.PrivateEndpointResourceId) {
    return nil, false
	}
	return o.PrivateEndpointResourceId, true
}

// HasPrivateEndpointResourceId returns a boolean if a field has been set.
func (o *ApiAtlasAzurePrivateEndpointView) HasPrivateEndpointResourceId() bool {
	if o != nil && !isNil(o.PrivateEndpointResourceId) {
		return true
	}

	return false
}

// SetPrivateEndpointResourceId gets a reference to the given string and assigns it to the PrivateEndpointResourceId field.
func (o *ApiAtlasAzurePrivateEndpointView) SetPrivateEndpointResourceId(v string) {
	o.PrivateEndpointResourceId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiAtlasAzurePrivateEndpointView) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePrivateEndpointView) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiAtlasAzurePrivateEndpointView) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiAtlasAzurePrivateEndpointView) SetStatus(v string) {
	o.Status = &v
}

func (o ApiAtlasAzurePrivateEndpointView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DeleteRequested) {
		toSerialize["deleteRequested"] = o.DeleteRequested
	}
	if !isNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !isNil(o.PrivateEndpointConnectionName) {
		toSerialize["privateEndpointConnectionName"] = o.PrivateEndpointConnectionName
	}
	if !isNil(o.PrivateEndpointIPAddress) {
		toSerialize["privateEndpointIPAddress"] = o.PrivateEndpointIPAddress
	}
	if !isNil(o.PrivateEndpointResourceId) {
		toSerialize["privateEndpointResourceId"] = o.PrivateEndpointResourceId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasAzurePrivateEndpointView struct {
	value *ApiAtlasAzurePrivateEndpointView
	isSet bool
}

func (v NullableApiAtlasAzurePrivateEndpointView) Get() *ApiAtlasAzurePrivateEndpointView {
	return v.value
}

func (v *NullableApiAtlasAzurePrivateEndpointView) Set(val *ApiAtlasAzurePrivateEndpointView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasAzurePrivateEndpointView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasAzurePrivateEndpointView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasAzurePrivateEndpointView(val *ApiAtlasAzurePrivateEndpointView) *NullableApiAtlasAzurePrivateEndpointView {
	return &NullableApiAtlasAzurePrivateEndpointView{value: val, isSet: true}
}

func (v NullableApiAtlasAzurePrivateEndpointView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasAzurePrivateEndpointView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


