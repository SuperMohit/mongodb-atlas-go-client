/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasClusterV15AutoScalingGCPManual struct for ApiAtlasClusterV15AutoScalingGCPManual
type ApiAtlasClusterV15AutoScalingGCPManual struct {
	Compute *ApiAtlasClusterV15ComputeAutoScalingGCPManual `json:"compute,omitempty"`
	DiskGB *ApiAtlasClusterV15AutoScalingAWSManualDiskGB `json:"diskGB,omitempty"`
}

// NewApiAtlasClusterV15AutoScalingGCPManual instantiates a new ApiAtlasClusterV15AutoScalingGCPManual object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasClusterV15AutoScalingGCPManual() *ApiAtlasClusterV15AutoScalingGCPManual {
	this := ApiAtlasClusterV15AutoScalingGCPManual{}
	return &this
}

// NewApiAtlasClusterV15AutoScalingGCPManualWithDefaults instantiates a new ApiAtlasClusterV15AutoScalingGCPManual object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasClusterV15AutoScalingGCPManualWithDefaults() *ApiAtlasClusterV15AutoScalingGCPManual {
	this := ApiAtlasClusterV15AutoScalingGCPManual{}
	return &this
}

// GetCompute returns the Compute field value if set, zero value otherwise.
func (o *ApiAtlasClusterV15AutoScalingGCPManual) GetCompute() ApiAtlasClusterV15ComputeAutoScalingGCPManual {
	if o == nil || isNil(o.Compute) {
		var ret ApiAtlasClusterV15ComputeAutoScalingGCPManual
		return ret
	}
	return *o.Compute
}

// GetComputeOk returns a tuple with the Compute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasClusterV15AutoScalingGCPManual) GetComputeOk() (*ApiAtlasClusterV15ComputeAutoScalingGCPManual, bool) {
	if o == nil || isNil(o.Compute) {
    return nil, false
	}
	return o.Compute, true
}

// HasCompute returns a boolean if a field has been set.
func (o *ApiAtlasClusterV15AutoScalingGCPManual) HasCompute() bool {
	if o != nil && !isNil(o.Compute) {
		return true
	}

	return false
}

// SetCompute gets a reference to the given ApiAtlasClusterV15ComputeAutoScalingGCPManual and assigns it to the Compute field.
func (o *ApiAtlasClusterV15AutoScalingGCPManual) SetCompute(v ApiAtlasClusterV15ComputeAutoScalingGCPManual) {
	o.Compute = &v
}

// GetDiskGB returns the DiskGB field value if set, zero value otherwise.
func (o *ApiAtlasClusterV15AutoScalingGCPManual) GetDiskGB() ApiAtlasClusterV15AutoScalingAWSManualDiskGB {
	if o == nil || isNil(o.DiskGB) {
		var ret ApiAtlasClusterV15AutoScalingAWSManualDiskGB
		return ret
	}
	return *o.DiskGB
}

// GetDiskGBOk returns a tuple with the DiskGB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasClusterV15AutoScalingGCPManual) GetDiskGBOk() (*ApiAtlasClusterV15AutoScalingAWSManualDiskGB, bool) {
	if o == nil || isNil(o.DiskGB) {
    return nil, false
	}
	return o.DiskGB, true
}

// HasDiskGB returns a boolean if a field has been set.
func (o *ApiAtlasClusterV15AutoScalingGCPManual) HasDiskGB() bool {
	if o != nil && !isNil(o.DiskGB) {
		return true
	}

	return false
}

// SetDiskGB gets a reference to the given ApiAtlasClusterV15AutoScalingAWSManualDiskGB and assigns it to the DiskGB field.
func (o *ApiAtlasClusterV15AutoScalingGCPManual) SetDiskGB(v ApiAtlasClusterV15AutoScalingAWSManualDiskGB) {
	o.DiskGB = &v
}

func (o ApiAtlasClusterV15AutoScalingGCPManual) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Compute) {
		toSerialize["compute"] = o.Compute
	}
	if !isNil(o.DiskGB) {
		toSerialize["diskGB"] = o.DiskGB
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasClusterV15AutoScalingGCPManual struct {
	value *ApiAtlasClusterV15AutoScalingGCPManual
	isSet bool
}

func (v NullableApiAtlasClusterV15AutoScalingGCPManual) Get() *ApiAtlasClusterV15AutoScalingGCPManual {
	return v.value
}

func (v *NullableApiAtlasClusterV15AutoScalingGCPManual) Set(val *ApiAtlasClusterV15AutoScalingGCPManual) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasClusterV15AutoScalingGCPManual) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasClusterV15AutoScalingGCPManual) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasClusterV15AutoScalingGCPManual(val *ApiAtlasClusterV15AutoScalingGCPManual) *NullableApiAtlasClusterV15AutoScalingGCPManual {
	return &NullableApiAtlasClusterV15AutoScalingGCPManual{value: val, isSet: true}
}

func (v NullableApiAtlasClusterV15AutoScalingGCPManual) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasClusterV15AutoScalingGCPManual) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


