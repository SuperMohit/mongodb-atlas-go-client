/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerlessInstancePrivateEndpoint struct for ServerlessInstancePrivateEndpoint
type ServerlessInstancePrivateEndpoint struct {
	// List that contains the private endpoints through which you connect to MongoDB Cloud when you use **connectionStrings.privateEndpoint[n].srvConnectionString**.
	Endpoints []ServerlessInstancePrivateEndpointEndpoint `json:"endpoints"`
	// Private endpoint-aware connection string that uses the `mongodb+srv://` protocol to connect to MongoDB Cloud through a private endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list of hosts in the Domain Name System (DNS).
	SrvConnectionString string `json:"srvConnectionString"`
	// MongoDB process type to which your application connects. 
	Type string `json:"type"`
}

// NewServerlessInstancePrivateEndpoint instantiates a new ServerlessInstancePrivateEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerlessInstancePrivateEndpoint(endpoints []ServerlessInstancePrivateEndpointEndpoint, srvConnectionString string, type_ string) *ServerlessInstancePrivateEndpoint {
	this := ServerlessInstancePrivateEndpoint{}
	this.Endpoints = endpoints
	this.SrvConnectionString = srvConnectionString
	this.Type = type_
	return &this
}

// NewServerlessInstancePrivateEndpointWithDefaults instantiates a new ServerlessInstancePrivateEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerlessInstancePrivateEndpointWithDefaults() *ServerlessInstancePrivateEndpoint {
	this := ServerlessInstancePrivateEndpoint{}
	return &this
}

// GetEndpoints returns the Endpoints field value
func (o *ServerlessInstancePrivateEndpoint) GetEndpoints() []ServerlessInstancePrivateEndpointEndpoint {
	if o == nil {
		var ret []ServerlessInstancePrivateEndpointEndpoint
		return ret
	}

	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value
// and a boolean to check if the value has been set.
func (o *ServerlessInstancePrivateEndpoint) GetEndpointsOk() ([]ServerlessInstancePrivateEndpointEndpoint, bool) {
	if o == nil {
    return nil, false
	}
	return o.Endpoints, true
}

// SetEndpoints sets field value
func (o *ServerlessInstancePrivateEndpoint) SetEndpoints(v []ServerlessInstancePrivateEndpointEndpoint) {
	o.Endpoints = v
}

// GetSrvConnectionString returns the SrvConnectionString field value
func (o *ServerlessInstancePrivateEndpoint) GetSrvConnectionString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SrvConnectionString
}

// GetSrvConnectionStringOk returns a tuple with the SrvConnectionString field value
// and a boolean to check if the value has been set.
func (o *ServerlessInstancePrivateEndpoint) GetSrvConnectionStringOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SrvConnectionString, true
}

// SetSrvConnectionString sets field value
func (o *ServerlessInstancePrivateEndpoint) SetSrvConnectionString(v string) {
	o.SrvConnectionString = v
}

// GetType returns the Type field value
func (o *ServerlessInstancePrivateEndpoint) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServerlessInstancePrivateEndpoint) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServerlessInstancePrivateEndpoint) SetType(v string) {
	o.Type = v
}

func (o ServerlessInstancePrivateEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["endpoints"] = o.Endpoints
	}
	if true {
		toSerialize["srvConnectionString"] = o.SrvConnectionString
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableServerlessInstancePrivateEndpoint struct {
	value *ServerlessInstancePrivateEndpoint
	isSet bool
}

func (v NullableServerlessInstancePrivateEndpoint) Get() *ServerlessInstancePrivateEndpoint {
	return v.value
}

func (v *NullableServerlessInstancePrivateEndpoint) Set(val *ServerlessInstancePrivateEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableServerlessInstancePrivateEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableServerlessInstancePrivateEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerlessInstancePrivateEndpoint(val *ServerlessInstancePrivateEndpoint) *NullableServerlessInstancePrivateEndpoint {
	return &NullableServerlessInstancePrivateEndpoint{value: val, isSet: true}
}

func (v NullableServerlessInstancePrivateEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerlessInstancePrivateEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


