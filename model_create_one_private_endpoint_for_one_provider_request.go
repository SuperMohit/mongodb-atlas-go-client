/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CreateOnePrivateEndpointForOneProviderRequest - struct for CreateOnePrivateEndpointForOneProviderRequest
type CreateOnePrivateEndpointForOneProviderRequest struct {
	ApiAtlasCreateAWSEndpointRequestView *ApiAtlasCreateAWSEndpointRequestView
	ApiAtlasCreateAzureEndpointRequestView *ApiAtlasCreateAzureEndpointRequestView
	ApiAtlasCreateGCPEndpointGroupRequestView *ApiAtlasCreateGCPEndpointGroupRequestView
}

// ApiAtlasCreateAWSEndpointRequestViewAsCreateOnePrivateEndpointForOneProviderRequest is a convenience function that returns ApiAtlasCreateAWSEndpointRequestView wrapped in CreateOnePrivateEndpointForOneProviderRequest
func ApiAtlasCreateAWSEndpointRequestViewAsCreateOnePrivateEndpointForOneProviderRequest(v *ApiAtlasCreateAWSEndpointRequestView) CreateOnePrivateEndpointForOneProviderRequest {
	return CreateOnePrivateEndpointForOneProviderRequest{
		ApiAtlasCreateAWSEndpointRequestView: v,
	}
}

// ApiAtlasCreateAzureEndpointRequestViewAsCreateOnePrivateEndpointForOneProviderRequest is a convenience function that returns ApiAtlasCreateAzureEndpointRequestView wrapped in CreateOnePrivateEndpointForOneProviderRequest
func ApiAtlasCreateAzureEndpointRequestViewAsCreateOnePrivateEndpointForOneProviderRequest(v *ApiAtlasCreateAzureEndpointRequestView) CreateOnePrivateEndpointForOneProviderRequest {
	return CreateOnePrivateEndpointForOneProviderRequest{
		ApiAtlasCreateAzureEndpointRequestView: v,
	}
}

// ApiAtlasCreateGCPEndpointGroupRequestViewAsCreateOnePrivateEndpointForOneProviderRequest is a convenience function that returns ApiAtlasCreateGCPEndpointGroupRequestView wrapped in CreateOnePrivateEndpointForOneProviderRequest
func ApiAtlasCreateGCPEndpointGroupRequestViewAsCreateOnePrivateEndpointForOneProviderRequest(v *ApiAtlasCreateGCPEndpointGroupRequestView) CreateOnePrivateEndpointForOneProviderRequest {
	return CreateOnePrivateEndpointForOneProviderRequest{
		ApiAtlasCreateGCPEndpointGroupRequestView: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateOnePrivateEndpointForOneProviderRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiAtlasCreateAWSEndpointRequestView
	err = newStrictDecoder(data).Decode(&dst.ApiAtlasCreateAWSEndpointRequestView)
	if err == nil {
		jsonApiAtlasCreateAWSEndpointRequestView, _ := json.Marshal(dst.ApiAtlasCreateAWSEndpointRequestView)
		if string(jsonApiAtlasCreateAWSEndpointRequestView) == "{}" { // empty struct
			dst.ApiAtlasCreateAWSEndpointRequestView = nil
		} else {
			match++
		}
	} else {
		dst.ApiAtlasCreateAWSEndpointRequestView = nil
	}

	// try to unmarshal data into ApiAtlasCreateAzureEndpointRequestView
	err = newStrictDecoder(data).Decode(&dst.ApiAtlasCreateAzureEndpointRequestView)
	if err == nil {
		jsonApiAtlasCreateAzureEndpointRequestView, _ := json.Marshal(dst.ApiAtlasCreateAzureEndpointRequestView)
		if string(jsonApiAtlasCreateAzureEndpointRequestView) == "{}" { // empty struct
			dst.ApiAtlasCreateAzureEndpointRequestView = nil
		} else {
			match++
		}
	} else {
		dst.ApiAtlasCreateAzureEndpointRequestView = nil
	}

	// try to unmarshal data into ApiAtlasCreateGCPEndpointGroupRequestView
	err = newStrictDecoder(data).Decode(&dst.ApiAtlasCreateGCPEndpointGroupRequestView)
	if err == nil {
		jsonApiAtlasCreateGCPEndpointGroupRequestView, _ := json.Marshal(dst.ApiAtlasCreateGCPEndpointGroupRequestView)
		if string(jsonApiAtlasCreateGCPEndpointGroupRequestView) == "{}" { // empty struct
			dst.ApiAtlasCreateGCPEndpointGroupRequestView = nil
		} else {
			match++
		}
	} else {
		dst.ApiAtlasCreateGCPEndpointGroupRequestView = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiAtlasCreateAWSEndpointRequestView = nil
		dst.ApiAtlasCreateAzureEndpointRequestView = nil
		dst.ApiAtlasCreateGCPEndpointGroupRequestView = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateOnePrivateEndpointForOneProviderRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateOnePrivateEndpointForOneProviderRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateOnePrivateEndpointForOneProviderRequest) MarshalJSON() ([]byte, error) {
	if src.ApiAtlasCreateAWSEndpointRequestView != nil {
		return json.Marshal(&src.ApiAtlasCreateAWSEndpointRequestView)
	}

	if src.ApiAtlasCreateAzureEndpointRequestView != nil {
		return json.Marshal(&src.ApiAtlasCreateAzureEndpointRequestView)
	}

	if src.ApiAtlasCreateGCPEndpointGroupRequestView != nil {
		return json.Marshal(&src.ApiAtlasCreateGCPEndpointGroupRequestView)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateOnePrivateEndpointForOneProviderRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiAtlasCreateAWSEndpointRequestView != nil {
		return obj.ApiAtlasCreateAWSEndpointRequestView
	}

	if obj.ApiAtlasCreateAzureEndpointRequestView != nil {
		return obj.ApiAtlasCreateAzureEndpointRequestView
	}

	if obj.ApiAtlasCreateGCPEndpointGroupRequestView != nil {
		return obj.ApiAtlasCreateGCPEndpointGroupRequestView
	}

	// all schemas are nil
	return nil
}

type NullableCreateOnePrivateEndpointForOneProviderRequest struct {
	value *CreateOnePrivateEndpointForOneProviderRequest
	isSet bool
}

func (v NullableCreateOnePrivateEndpointForOneProviderRequest) Get() *CreateOnePrivateEndpointForOneProviderRequest {
	return v.value
}

func (v *NullableCreateOnePrivateEndpointForOneProviderRequest) Set(val *CreateOnePrivateEndpointForOneProviderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOnePrivateEndpointForOneProviderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOnePrivateEndpointForOneProviderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOnePrivateEndpointForOneProviderRequest(val *CreateOnePrivateEndpointForOneProviderRequest) *NullableCreateOnePrivateEndpointForOneProviderRequest {
	return &NullableCreateOnePrivateEndpointForOneProviderRequest{value: val, isSet: true}
}

func (v NullableCreateOnePrivateEndpointForOneProviderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOnePrivateEndpointForOneProviderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


