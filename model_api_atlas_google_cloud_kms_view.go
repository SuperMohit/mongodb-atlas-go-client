/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasGoogleCloudKMSView Details that define the configuration of Encryption at Rest using Google Cloud Key Management Service (KMS).
type ApiAtlasGoogleCloudKMSView struct {
	// Flag that indicates whether someone enabled encryption at rest for the specified  project. To disable encryption at rest using customer key management and remove the configuration details, pass only this parameter with a value of `false`.
	Enabled *bool `json:"enabled,omitempty"`
	// Resource path that displays the key version resource ID for your Google Cloud KMS.
	KeyVersionResourceID *string `json:"keyVersionResourceID,omitempty"`
	// JavaScript Object Notation (JSON) object that contains the Google Cloud Key Management Service (KMS). Format the JSON as a string and not as an object.
	ServiceAccountKey *string `json:"serviceAccountKey,omitempty"`
	// Flag that indicates whether the Google Cloud Key Management Service (KMS) encryption key can encrypt and decrypt data.
	Valid *bool `json:"valid,omitempty"`
}

// NewApiAtlasGoogleCloudKMSView instantiates a new ApiAtlasGoogleCloudKMSView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasGoogleCloudKMSView() *ApiAtlasGoogleCloudKMSView {
	this := ApiAtlasGoogleCloudKMSView{}
	return &this
}

// NewApiAtlasGoogleCloudKMSViewWithDefaults instantiates a new ApiAtlasGoogleCloudKMSView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasGoogleCloudKMSViewWithDefaults() *ApiAtlasGoogleCloudKMSView {
	this := ApiAtlasGoogleCloudKMSView{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiAtlasGoogleCloudKMSView) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasGoogleCloudKMSView) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiAtlasGoogleCloudKMSView) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiAtlasGoogleCloudKMSView) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetKeyVersionResourceID returns the KeyVersionResourceID field value if set, zero value otherwise.
func (o *ApiAtlasGoogleCloudKMSView) GetKeyVersionResourceID() string {
	if o == nil || isNil(o.KeyVersionResourceID) {
		var ret string
		return ret
	}
	return *o.KeyVersionResourceID
}

// GetKeyVersionResourceIDOk returns a tuple with the KeyVersionResourceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasGoogleCloudKMSView) GetKeyVersionResourceIDOk() (*string, bool) {
	if o == nil || isNil(o.KeyVersionResourceID) {
    return nil, false
	}
	return o.KeyVersionResourceID, true
}

// HasKeyVersionResourceID returns a boolean if a field has been set.
func (o *ApiAtlasGoogleCloudKMSView) HasKeyVersionResourceID() bool {
	if o != nil && !isNil(o.KeyVersionResourceID) {
		return true
	}

	return false
}

// SetKeyVersionResourceID gets a reference to the given string and assigns it to the KeyVersionResourceID field.
func (o *ApiAtlasGoogleCloudKMSView) SetKeyVersionResourceID(v string) {
	o.KeyVersionResourceID = &v
}

// GetServiceAccountKey returns the ServiceAccountKey field value if set, zero value otherwise.
func (o *ApiAtlasGoogleCloudKMSView) GetServiceAccountKey() string {
	if o == nil || isNil(o.ServiceAccountKey) {
		var ret string
		return ret
	}
	return *o.ServiceAccountKey
}

// GetServiceAccountKeyOk returns a tuple with the ServiceAccountKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasGoogleCloudKMSView) GetServiceAccountKeyOk() (*string, bool) {
	if o == nil || isNil(o.ServiceAccountKey) {
    return nil, false
	}
	return o.ServiceAccountKey, true
}

// HasServiceAccountKey returns a boolean if a field has been set.
func (o *ApiAtlasGoogleCloudKMSView) HasServiceAccountKey() bool {
	if o != nil && !isNil(o.ServiceAccountKey) {
		return true
	}

	return false
}

// SetServiceAccountKey gets a reference to the given string and assigns it to the ServiceAccountKey field.
func (o *ApiAtlasGoogleCloudKMSView) SetServiceAccountKey(v string) {
	o.ServiceAccountKey = &v
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *ApiAtlasGoogleCloudKMSView) GetValid() bool {
	if o == nil || isNil(o.Valid) {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasGoogleCloudKMSView) GetValidOk() (*bool, bool) {
	if o == nil || isNil(o.Valid) {
    return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *ApiAtlasGoogleCloudKMSView) HasValid() bool {
	if o != nil && !isNil(o.Valid) {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *ApiAtlasGoogleCloudKMSView) SetValid(v bool) {
	o.Valid = &v
}

func (o ApiAtlasGoogleCloudKMSView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.KeyVersionResourceID) {
		toSerialize["keyVersionResourceID"] = o.KeyVersionResourceID
	}
	if !isNil(o.ServiceAccountKey) {
		toSerialize["serviceAccountKey"] = o.ServiceAccountKey
	}
	if !isNil(o.Valid) {
		toSerialize["valid"] = o.Valid
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasGoogleCloudKMSView struct {
	value *ApiAtlasGoogleCloudKMSView
	isSet bool
}

func (v NullableApiAtlasGoogleCloudKMSView) Get() *ApiAtlasGoogleCloudKMSView {
	return v.value
}

func (v *NullableApiAtlasGoogleCloudKMSView) Set(val *ApiAtlasGoogleCloudKMSView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasGoogleCloudKMSView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasGoogleCloudKMSView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasGoogleCloudKMSView(val *ApiAtlasGoogleCloudKMSView) *NullableApiAtlasGoogleCloudKMSView {
	return &NullableApiAtlasGoogleCloudKMSView{value: val, isSet: true}
}

func (v NullableApiAtlasGoogleCloudKMSView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasGoogleCloudKMSView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


