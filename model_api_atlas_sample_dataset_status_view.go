/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ApiAtlasSampleDatasetStatusView struct for ApiAtlasSampleDatasetStatusView
type ApiAtlasSampleDatasetStatusView struct {
	// Unique 24-hexadecimal character string that identifies this sample dataset.
	Id *string `json:"_id,omitempty"`
	// Human-readable label that identifies the cluster into which you loaded the sample dataset.
	ClusterName *string `json:"clusterName,omitempty"`
	// Date and time when the sample dataset load job completed. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
	CompleteDate *time.Time `json:"completeDate,omitempty"`
	// Date and time when you started the sample dataset load job. MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
	CreateDate *time.Time `json:"createDate,omitempty"`
	// Details of the error returned when MongoDB Cloud loads the sample dataset. This endpoint returns null if state has a value other than FAILED.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Status of the sample dataset load job.
	State *string `json:"state,omitempty"`
}

// NewApiAtlasSampleDatasetStatusView instantiates a new ApiAtlasSampleDatasetStatusView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasSampleDatasetStatusView() *ApiAtlasSampleDatasetStatusView {
	this := ApiAtlasSampleDatasetStatusView{}
	return &this
}

// NewApiAtlasSampleDatasetStatusViewWithDefaults instantiates a new ApiAtlasSampleDatasetStatusView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasSampleDatasetStatusViewWithDefaults() *ApiAtlasSampleDatasetStatusView {
	this := ApiAtlasSampleDatasetStatusView{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiAtlasSampleDatasetStatusView) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasSampleDatasetStatusView) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiAtlasSampleDatasetStatusView) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiAtlasSampleDatasetStatusView) SetId(v string) {
	o.Id = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *ApiAtlasSampleDatasetStatusView) GetClusterName() string {
	if o == nil || isNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasSampleDatasetStatusView) GetClusterNameOk() (*string, bool) {
	if o == nil || isNil(o.ClusterName) {
    return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *ApiAtlasSampleDatasetStatusView) HasClusterName() bool {
	if o != nil && !isNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *ApiAtlasSampleDatasetStatusView) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetCompleteDate returns the CompleteDate field value if set, zero value otherwise.
func (o *ApiAtlasSampleDatasetStatusView) GetCompleteDate() time.Time {
	if o == nil || isNil(o.CompleteDate) {
		var ret time.Time
		return ret
	}
	return *o.CompleteDate
}

// GetCompleteDateOk returns a tuple with the CompleteDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasSampleDatasetStatusView) GetCompleteDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.CompleteDate) {
    return nil, false
	}
	return o.CompleteDate, true
}

// HasCompleteDate returns a boolean if a field has been set.
func (o *ApiAtlasSampleDatasetStatusView) HasCompleteDate() bool {
	if o != nil && !isNil(o.CompleteDate) {
		return true
	}

	return false
}

// SetCompleteDate gets a reference to the given time.Time and assigns it to the CompleteDate field.
func (o *ApiAtlasSampleDatasetStatusView) SetCompleteDate(v time.Time) {
	o.CompleteDate = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *ApiAtlasSampleDatasetStatusView) GetCreateDate() time.Time {
	if o == nil || isNil(o.CreateDate) {
		var ret time.Time
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasSampleDatasetStatusView) GetCreateDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreateDate) {
    return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *ApiAtlasSampleDatasetStatusView) HasCreateDate() bool {
	if o != nil && !isNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given time.Time and assigns it to the CreateDate field.
func (o *ApiAtlasSampleDatasetStatusView) SetCreateDate(v time.Time) {
	o.CreateDate = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *ApiAtlasSampleDatasetStatusView) GetErrorMessage() string {
	if o == nil || isNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasSampleDatasetStatusView) GetErrorMessageOk() (*string, bool) {
	if o == nil || isNil(o.ErrorMessage) {
    return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ApiAtlasSampleDatasetStatusView) HasErrorMessage() bool {
	if o != nil && !isNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *ApiAtlasSampleDatasetStatusView) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ApiAtlasSampleDatasetStatusView) GetState() string {
	if o == nil || isNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasSampleDatasetStatusView) GetStateOk() (*string, bool) {
	if o == nil || isNil(o.State) {
    return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ApiAtlasSampleDatasetStatusView) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ApiAtlasSampleDatasetStatusView) SetState(v string) {
	o.State = &v
}

func (o ApiAtlasSampleDatasetStatusView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["_id"] = o.Id
	}
	if !isNil(o.ClusterName) {
		toSerialize["clusterName"] = o.ClusterName
	}
	if !isNil(o.CompleteDate) {
		toSerialize["completeDate"] = o.CompleteDate
	}
	if !isNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	if !isNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasSampleDatasetStatusView struct {
	value *ApiAtlasSampleDatasetStatusView
	isSet bool
}

func (v NullableApiAtlasSampleDatasetStatusView) Get() *ApiAtlasSampleDatasetStatusView {
	return v.value
}

func (v *NullableApiAtlasSampleDatasetStatusView) Set(val *ApiAtlasSampleDatasetStatusView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasSampleDatasetStatusView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasSampleDatasetStatusView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasSampleDatasetStatusView(val *ApiAtlasSampleDatasetStatusView) *NullableApiAtlasSampleDatasetStatusView {
	return &NullableApiAtlasSampleDatasetStatusView{value: val, isSet: true}
}

func (v NullableApiAtlasSampleDatasetStatusView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasSampleDatasetStatusView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


