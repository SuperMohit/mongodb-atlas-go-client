/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ReturnAllPrivateEndpointServicesForOneProvider200Response - struct for ReturnAllPrivateEndpointServicesForOneProvider200Response
type ReturnAllPrivateEndpointServicesForOneProvider200Response struct {
	PaginatedAWSPrivateLinkConnectionView *PaginatedAWSPrivateLinkConnectionView
	PaginatedAzurePrivateLinkConnectionView *PaginatedAzurePrivateLinkConnectionView
	PaginatedGCPEndpointServiceView *PaginatedGCPEndpointServiceView
}

// PaginatedAWSPrivateLinkConnectionViewAsReturnAllPrivateEndpointServicesForOneProvider200Response is a convenience function that returns PaginatedAWSPrivateLinkConnectionView wrapped in ReturnAllPrivateEndpointServicesForOneProvider200Response
func PaginatedAWSPrivateLinkConnectionViewAsReturnAllPrivateEndpointServicesForOneProvider200Response(v *PaginatedAWSPrivateLinkConnectionView) ReturnAllPrivateEndpointServicesForOneProvider200Response {
	return ReturnAllPrivateEndpointServicesForOneProvider200Response{
		PaginatedAWSPrivateLinkConnectionView: v,
	}
}

// PaginatedAzurePrivateLinkConnectionViewAsReturnAllPrivateEndpointServicesForOneProvider200Response is a convenience function that returns PaginatedAzurePrivateLinkConnectionView wrapped in ReturnAllPrivateEndpointServicesForOneProvider200Response
func PaginatedAzurePrivateLinkConnectionViewAsReturnAllPrivateEndpointServicesForOneProvider200Response(v *PaginatedAzurePrivateLinkConnectionView) ReturnAllPrivateEndpointServicesForOneProvider200Response {
	return ReturnAllPrivateEndpointServicesForOneProvider200Response{
		PaginatedAzurePrivateLinkConnectionView: v,
	}
}

// PaginatedGCPEndpointServiceViewAsReturnAllPrivateEndpointServicesForOneProvider200Response is a convenience function that returns PaginatedGCPEndpointServiceView wrapped in ReturnAllPrivateEndpointServicesForOneProvider200Response
func PaginatedGCPEndpointServiceViewAsReturnAllPrivateEndpointServicesForOneProvider200Response(v *PaginatedGCPEndpointServiceView) ReturnAllPrivateEndpointServicesForOneProvider200Response {
	return ReturnAllPrivateEndpointServicesForOneProvider200Response{
		PaginatedGCPEndpointServiceView: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ReturnAllPrivateEndpointServicesForOneProvider200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into PaginatedAWSPrivateLinkConnectionView
	err = newStrictDecoder(data).Decode(&dst.PaginatedAWSPrivateLinkConnectionView)
	if err == nil {
		jsonPaginatedAWSPrivateLinkConnectionView, _ := json.Marshal(dst.PaginatedAWSPrivateLinkConnectionView)
		if string(jsonPaginatedAWSPrivateLinkConnectionView) == "{}" { // empty struct
			dst.PaginatedAWSPrivateLinkConnectionView = nil
		} else {
			match++
		}
	} else {
		dst.PaginatedAWSPrivateLinkConnectionView = nil
	}

	// try to unmarshal data into PaginatedAzurePrivateLinkConnectionView
	err = newStrictDecoder(data).Decode(&dst.PaginatedAzurePrivateLinkConnectionView)
	if err == nil {
		jsonPaginatedAzurePrivateLinkConnectionView, _ := json.Marshal(dst.PaginatedAzurePrivateLinkConnectionView)
		if string(jsonPaginatedAzurePrivateLinkConnectionView) == "{}" { // empty struct
			dst.PaginatedAzurePrivateLinkConnectionView = nil
		} else {
			match++
		}
	} else {
		dst.PaginatedAzurePrivateLinkConnectionView = nil
	}

	// try to unmarshal data into PaginatedGCPEndpointServiceView
	err = newStrictDecoder(data).Decode(&dst.PaginatedGCPEndpointServiceView)
	if err == nil {
		jsonPaginatedGCPEndpointServiceView, _ := json.Marshal(dst.PaginatedGCPEndpointServiceView)
		if string(jsonPaginatedGCPEndpointServiceView) == "{}" { // empty struct
			dst.PaginatedGCPEndpointServiceView = nil
		} else {
			match++
		}
	} else {
		dst.PaginatedGCPEndpointServiceView = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.PaginatedAWSPrivateLinkConnectionView = nil
		dst.PaginatedAzurePrivateLinkConnectionView = nil
		dst.PaginatedGCPEndpointServiceView = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ReturnAllPrivateEndpointServicesForOneProvider200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ReturnAllPrivateEndpointServicesForOneProvider200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ReturnAllPrivateEndpointServicesForOneProvider200Response) MarshalJSON() ([]byte, error) {
	if src.PaginatedAWSPrivateLinkConnectionView != nil {
		return json.Marshal(&src.PaginatedAWSPrivateLinkConnectionView)
	}

	if src.PaginatedAzurePrivateLinkConnectionView != nil {
		return json.Marshal(&src.PaginatedAzurePrivateLinkConnectionView)
	}

	if src.PaginatedGCPEndpointServiceView != nil {
		return json.Marshal(&src.PaginatedGCPEndpointServiceView)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ReturnAllPrivateEndpointServicesForOneProvider200Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.PaginatedAWSPrivateLinkConnectionView != nil {
		return obj.PaginatedAWSPrivateLinkConnectionView
	}

	if obj.PaginatedAzurePrivateLinkConnectionView != nil {
		return obj.PaginatedAzurePrivateLinkConnectionView
	}

	if obj.PaginatedGCPEndpointServiceView != nil {
		return obj.PaginatedGCPEndpointServiceView
	}

	// all schemas are nil
	return nil
}

type NullableReturnAllPrivateEndpointServicesForOneProvider200Response struct {
	value *ReturnAllPrivateEndpointServicesForOneProvider200Response
	isSet bool
}

func (v NullableReturnAllPrivateEndpointServicesForOneProvider200Response) Get() *ReturnAllPrivateEndpointServicesForOneProvider200Response {
	return v.value
}

func (v *NullableReturnAllPrivateEndpointServicesForOneProvider200Response) Set(val *ReturnAllPrivateEndpointServicesForOneProvider200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnAllPrivateEndpointServicesForOneProvider200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnAllPrivateEndpointServicesForOneProvider200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnAllPrivateEndpointServicesForOneProvider200Response(val *ReturnAllPrivateEndpointServicesForOneProvider200Response) *NullableReturnAllPrivateEndpointServicesForOneProvider200Response {
	return &NullableReturnAllPrivateEndpointServicesForOneProvider200Response{value: val, isSet: true}
}

func (v NullableReturnAllPrivateEndpointServicesForOneProvider200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnAllPrivateEndpointServicesForOneProvider200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


