/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiRestoreJobFileHashView Key and value pair that map one restore file to one hashed checksum. This parameter applies after you download the corresponding **delivery.url**.
type ApiRestoreJobFileHashView struct {
	// Human-readable label that identifies the hashed file.
	FileName *string `json:"fileName,omitempty"`
	// Hashed checksum that maps to the restore file.
	Hash *string `json:"hash,omitempty"`
	// List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
	Links []Link `json:"links"`
	// Human-readable label that identifies the hashing algorithm used to compute the hash value.
	TypeName *string `json:"typeName,omitempty"`
}

// NewApiRestoreJobFileHashView instantiates a new ApiRestoreJobFileHashView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRestoreJobFileHashView(links []Link) *ApiRestoreJobFileHashView {
	this := ApiRestoreJobFileHashView{}
	this.Links = links
	return &this
}

// NewApiRestoreJobFileHashViewWithDefaults instantiates a new ApiRestoreJobFileHashView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRestoreJobFileHashViewWithDefaults() *ApiRestoreJobFileHashView {
	this := ApiRestoreJobFileHashView{}
	return &this
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *ApiRestoreJobFileHashView) GetFileName() string {
	if o == nil || isNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRestoreJobFileHashView) GetFileNameOk() (*string, bool) {
	if o == nil || isNil(o.FileName) {
    return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *ApiRestoreJobFileHashView) HasFileName() bool {
	if o != nil && !isNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *ApiRestoreJobFileHashView) SetFileName(v string) {
	o.FileName = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ApiRestoreJobFileHashView) GetHash() string {
	if o == nil || isNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRestoreJobFileHashView) GetHashOk() (*string, bool) {
	if o == nil || isNil(o.Hash) {
    return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ApiRestoreJobFileHashView) HasHash() bool {
	if o != nil && !isNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *ApiRestoreJobFileHashView) SetHash(v string) {
	o.Hash = &v
}

// GetLinks returns the Links field value
func (o *ApiRestoreJobFileHashView) GetLinks() []Link {
	if o == nil {
		var ret []Link
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *ApiRestoreJobFileHashView) GetLinksOk() ([]Link, bool) {
	if o == nil {
    return nil, false
	}
	return o.Links, true
}

// SetLinks sets field value
func (o *ApiRestoreJobFileHashView) SetLinks(v []Link) {
	o.Links = v
}

// GetTypeName returns the TypeName field value if set, zero value otherwise.
func (o *ApiRestoreJobFileHashView) GetTypeName() string {
	if o == nil || isNil(o.TypeName) {
		var ret string
		return ret
	}
	return *o.TypeName
}

// GetTypeNameOk returns a tuple with the TypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRestoreJobFileHashView) GetTypeNameOk() (*string, bool) {
	if o == nil || isNil(o.TypeName) {
    return nil, false
	}
	return o.TypeName, true
}

// HasTypeName returns a boolean if a field has been set.
func (o *ApiRestoreJobFileHashView) HasTypeName() bool {
	if o != nil && !isNil(o.TypeName) {
		return true
	}

	return false
}

// SetTypeName gets a reference to the given string and assigns it to the TypeName field.
func (o *ApiRestoreJobFileHashView) SetTypeName(v string) {
	o.TypeName = &v
}

func (o ApiRestoreJobFileHashView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !isNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if true {
		toSerialize["links"] = o.Links
	}
	if !isNil(o.TypeName) {
		toSerialize["typeName"] = o.TypeName
	}
	return json.Marshal(toSerialize)
}

type NullableApiRestoreJobFileHashView struct {
	value *ApiRestoreJobFileHashView
	isSet bool
}

func (v NullableApiRestoreJobFileHashView) Get() *ApiRestoreJobFileHashView {
	return v.value
}

func (v *NullableApiRestoreJobFileHashView) Set(val *ApiRestoreJobFileHashView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRestoreJobFileHashView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRestoreJobFileHashView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRestoreJobFileHashView(val *ApiRestoreJobFileHashView) *NullableApiRestoreJobFileHashView {
	return &NullableApiRestoreJobFileHashView{value: val, isSet: true}
}

func (v NullableApiRestoreJobFileHashView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRestoreJobFileHashView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


