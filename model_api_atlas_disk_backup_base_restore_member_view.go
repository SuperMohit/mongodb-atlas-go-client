/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasDiskBackupBaseRestoreMemberView struct for ApiAtlasDiskBackupBaseRestoreMemberView
type ApiAtlasDiskBackupBaseRestoreMemberView struct {
	// Human-readable label that identifies the replica set on the sharded cluster.
	ReplicaSetName *string `json:"replicaSetName,omitempty"`
}

// NewApiAtlasDiskBackupBaseRestoreMemberView instantiates a new ApiAtlasDiskBackupBaseRestoreMemberView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasDiskBackupBaseRestoreMemberView() *ApiAtlasDiskBackupBaseRestoreMemberView {
	this := ApiAtlasDiskBackupBaseRestoreMemberView{}
	return &this
}

// NewApiAtlasDiskBackupBaseRestoreMemberViewWithDefaults instantiates a new ApiAtlasDiskBackupBaseRestoreMemberView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasDiskBackupBaseRestoreMemberViewWithDefaults() *ApiAtlasDiskBackupBaseRestoreMemberView {
	this := ApiAtlasDiskBackupBaseRestoreMemberView{}
	return &this
}

// GetReplicaSetName returns the ReplicaSetName field value if set, zero value otherwise.
func (o *ApiAtlasDiskBackupBaseRestoreMemberView) GetReplicaSetName() string {
	if o == nil || isNil(o.ReplicaSetName) {
		var ret string
		return ret
	}
	return *o.ReplicaSetName
}

// GetReplicaSetNameOk returns a tuple with the ReplicaSetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasDiskBackupBaseRestoreMemberView) GetReplicaSetNameOk() (*string, bool) {
	if o == nil || isNil(o.ReplicaSetName) {
    return nil, false
	}
	return o.ReplicaSetName, true
}

// HasReplicaSetName returns a boolean if a field has been set.
func (o *ApiAtlasDiskBackupBaseRestoreMemberView) HasReplicaSetName() bool {
	if o != nil && !isNil(o.ReplicaSetName) {
		return true
	}

	return false
}

// SetReplicaSetName gets a reference to the given string and assigns it to the ReplicaSetName field.
func (o *ApiAtlasDiskBackupBaseRestoreMemberView) SetReplicaSetName(v string) {
	o.ReplicaSetName = &v
}

func (o ApiAtlasDiskBackupBaseRestoreMemberView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ReplicaSetName) {
		toSerialize["replicaSetName"] = o.ReplicaSetName
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasDiskBackupBaseRestoreMemberView struct {
	value *ApiAtlasDiskBackupBaseRestoreMemberView
	isSet bool
}

func (v NullableApiAtlasDiskBackupBaseRestoreMemberView) Get() *ApiAtlasDiskBackupBaseRestoreMemberView {
	return v.value
}

func (v *NullableApiAtlasDiskBackupBaseRestoreMemberView) Set(val *ApiAtlasDiskBackupBaseRestoreMemberView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasDiskBackupBaseRestoreMemberView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasDiskBackupBaseRestoreMemberView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasDiskBackupBaseRestoreMemberView(val *ApiAtlasDiskBackupBaseRestoreMemberView) *NullableApiAtlasDiskBackupBaseRestoreMemberView {
	return &NullableApiAtlasDiskBackupBaseRestoreMemberView{value: val, isSet: true}
}

func (v NullableApiAtlasDiskBackupBaseRestoreMemberView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasDiskBackupBaseRestoreMemberView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


