/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasAzurePeerNetworkView Group of Network Peering connection settings.
type ApiAtlasAzurePeerNetworkView struct {
	// Unique string that identifies the Azure AD directory in which the VNet peered with the MongoDB Cloud VNet resides.
	AzureDirectoryId string `json:"azureDirectoryId"`
	// Unique string that identifies the Azure subscription in which the VNet you peered with the MongoDB Cloud VNet resides.
	AzureSubscriptionId string `json:"azureSubscriptionId"`
	// Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that contains the specified network peering connection.
	ContainerId string `json:"containerId"`
	// Error message returned when a requested Azure network peering resource returns `\"status\" : \"FAILED\"`. The resource returns `null` if the request succeeded.
	ErrorState *string `json:"errorState,omitempty"`
	// Unique 24-hexadecimal digit string that identifies the network peering connection.
	Id *string `json:"id,omitempty"`
	// Human-readable label that identifies the resource group in which the VNet to peer with the MongoDB Cloud VNet resides.
	ResourceGroupName string `json:"resourceGroupName"`
	// State of the network peering connection at the time you made the request.
	Status *string `json:"status,omitempty"`
	// Human-readable label that identifies the VNet that you want to peer with the MongoDB Cloud VNet.
	VnetName string `json:"vnetName"`
}

// NewApiAtlasAzurePeerNetworkView instantiates a new ApiAtlasAzurePeerNetworkView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasAzurePeerNetworkView(azureDirectoryId string, azureSubscriptionId string, containerId string, resourceGroupName string, vnetName string) *ApiAtlasAzurePeerNetworkView {
	this := ApiAtlasAzurePeerNetworkView{}
	this.AzureDirectoryId = azureDirectoryId
	this.AzureSubscriptionId = azureSubscriptionId
	this.ContainerId = containerId
	this.ResourceGroupName = resourceGroupName
	this.VnetName = vnetName
	return &this
}

// NewApiAtlasAzurePeerNetworkViewWithDefaults instantiates a new ApiAtlasAzurePeerNetworkView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasAzurePeerNetworkViewWithDefaults() *ApiAtlasAzurePeerNetworkView {
	this := ApiAtlasAzurePeerNetworkView{}
	return &this
}

// GetAzureDirectoryId returns the AzureDirectoryId field value
func (o *ApiAtlasAzurePeerNetworkView) GetAzureDirectoryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AzureDirectoryId
}

// GetAzureDirectoryIdOk returns a tuple with the AzureDirectoryId field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePeerNetworkView) GetAzureDirectoryIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AzureDirectoryId, true
}

// SetAzureDirectoryId sets field value
func (o *ApiAtlasAzurePeerNetworkView) SetAzureDirectoryId(v string) {
	o.AzureDirectoryId = v
}

// GetAzureSubscriptionId returns the AzureSubscriptionId field value
func (o *ApiAtlasAzurePeerNetworkView) GetAzureSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AzureSubscriptionId
}

// GetAzureSubscriptionIdOk returns a tuple with the AzureSubscriptionId field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePeerNetworkView) GetAzureSubscriptionIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AzureSubscriptionId, true
}

// SetAzureSubscriptionId sets field value
func (o *ApiAtlasAzurePeerNetworkView) SetAzureSubscriptionId(v string) {
	o.AzureSubscriptionId = v
}

// GetContainerId returns the ContainerId field value
func (o *ApiAtlasAzurePeerNetworkView) GetContainerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePeerNetworkView) GetContainerIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ContainerId, true
}

// SetContainerId sets field value
func (o *ApiAtlasAzurePeerNetworkView) SetContainerId(v string) {
	o.ContainerId = v
}

// GetErrorState returns the ErrorState field value if set, zero value otherwise.
func (o *ApiAtlasAzurePeerNetworkView) GetErrorState() string {
	if o == nil || isNil(o.ErrorState) {
		var ret string
		return ret
	}
	return *o.ErrorState
}

// GetErrorStateOk returns a tuple with the ErrorState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePeerNetworkView) GetErrorStateOk() (*string, bool) {
	if o == nil || isNil(o.ErrorState) {
    return nil, false
	}
	return o.ErrorState, true
}

// HasErrorState returns a boolean if a field has been set.
func (o *ApiAtlasAzurePeerNetworkView) HasErrorState() bool {
	if o != nil && !isNil(o.ErrorState) {
		return true
	}

	return false
}

// SetErrorState gets a reference to the given string and assigns it to the ErrorState field.
func (o *ApiAtlasAzurePeerNetworkView) SetErrorState(v string) {
	o.ErrorState = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiAtlasAzurePeerNetworkView) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePeerNetworkView) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiAtlasAzurePeerNetworkView) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiAtlasAzurePeerNetworkView) SetId(v string) {
	o.Id = &v
}

// GetResourceGroupName returns the ResourceGroupName field value
func (o *ApiAtlasAzurePeerNetworkView) GetResourceGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePeerNetworkView) GetResourceGroupNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ResourceGroupName, true
}

// SetResourceGroupName sets field value
func (o *ApiAtlasAzurePeerNetworkView) SetResourceGroupName(v string) {
	o.ResourceGroupName = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiAtlasAzurePeerNetworkView) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePeerNetworkView) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiAtlasAzurePeerNetworkView) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiAtlasAzurePeerNetworkView) SetStatus(v string) {
	o.Status = &v
}

// GetVnetName returns the VnetName field value
func (o *ApiAtlasAzurePeerNetworkView) GetVnetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VnetName
}

// GetVnetNameOk returns a tuple with the VnetName field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasAzurePeerNetworkView) GetVnetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.VnetName, true
}

// SetVnetName sets field value
func (o *ApiAtlasAzurePeerNetworkView) SetVnetName(v string) {
	o.VnetName = v
}

func (o ApiAtlasAzurePeerNetworkView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["azureDirectoryId"] = o.AzureDirectoryId
	}
	if true {
		toSerialize["azureSubscriptionId"] = o.AzureSubscriptionId
	}
	if true {
		toSerialize["containerId"] = o.ContainerId
	}
	if !isNil(o.ErrorState) {
		toSerialize["errorState"] = o.ErrorState
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["resourceGroupName"] = o.ResourceGroupName
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["vnetName"] = o.VnetName
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasAzurePeerNetworkView struct {
	value *ApiAtlasAzurePeerNetworkView
	isSet bool
}

func (v NullableApiAtlasAzurePeerNetworkView) Get() *ApiAtlasAzurePeerNetworkView {
	return v.value
}

func (v *NullableApiAtlasAzurePeerNetworkView) Set(val *ApiAtlasAzurePeerNetworkView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasAzurePeerNetworkView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasAzurePeerNetworkView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasAzurePeerNetworkView(val *ApiAtlasAzurePeerNetworkView) *NullableApiAtlasAzurePeerNetworkView {
	return &NullableApiAtlasAzurePeerNetworkView{value: val, isSet: true}
}

func (v NullableApiAtlasAzurePeerNetworkView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasAzurePeerNetworkView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


