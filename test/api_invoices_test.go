/*
MongoDB Atlas Administration API

Testing InvoicesApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
    "context"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    openapiclient "./openapi"
)

func Test_openapi_InvoicesApiService(t *testing.T) {

    configuration := openapiclient.NewConfiguration()
    apiClient := openapiclient.NewAPIClient(configuration)

    t.Run("Test InvoicesApiService ReturnAllInvoicesForOneOrganization", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var orgId string

        resp, httpRes, err := apiClient.InvoicesApi.ReturnAllInvoicesForOneOrganization(context.Background(), orgId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test InvoicesApiService ReturnAllPendingInvoicesForOneOrganization", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var orgId string

        resp, httpRes, err := apiClient.InvoicesApi.ReturnAllPendingInvoicesForOneOrganization(context.Background(), orgId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test InvoicesApiService ReturnOneOrganizationInvoice", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var orgId string
        var invoiceId string

        resp, httpRes, err := apiClient.InvoicesApi.ReturnOneOrganizationInvoice(context.Background(), orgId, invoiceId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test InvoicesApiService ReturnOneOrganizationInvoiceAsCsv", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var orgId string
        var invoiceId string

        resp, httpRes, err := apiClient.InvoicesApi.ReturnOneOrganizationInvoiceAsCsv(context.Background(), orgId, invoiceId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
