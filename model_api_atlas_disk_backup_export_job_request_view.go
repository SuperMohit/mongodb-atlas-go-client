/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasDiskBackupExportJobRequestView struct for ApiAtlasDiskBackupExportJobRequestView
type ApiAtlasDiskBackupExportJobRequestView struct {
	// Collection of key-value pairs that represent custom data to add to the metadata file that MongoDB Cloud uploads to the bucket when the export job finishes.
	CustomData []ApiAtlasLabelView `json:"customData,omitempty"`
	// Unique 24-hexadecimal character string that identifies the AWS bucket to which MongoDB Cloud exports the Cloud Backup snapshot.
	ExportBucketId string `json:"exportBucketId"`
	// List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.
	Links []Link `json:"links"`
	// Unique 24-hexadecimal character string that identifies the Cloud Backup snasphot to export.
	SnapshotId string `json:"snapshotId"`
}

// NewApiAtlasDiskBackupExportJobRequestView instantiates a new ApiAtlasDiskBackupExportJobRequestView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasDiskBackupExportJobRequestView(exportBucketId string, links []Link, snapshotId string) *ApiAtlasDiskBackupExportJobRequestView {
	this := ApiAtlasDiskBackupExportJobRequestView{}
	this.ExportBucketId = exportBucketId
	this.Links = links
	this.SnapshotId = snapshotId
	return &this
}

// NewApiAtlasDiskBackupExportJobRequestViewWithDefaults instantiates a new ApiAtlasDiskBackupExportJobRequestView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasDiskBackupExportJobRequestViewWithDefaults() *ApiAtlasDiskBackupExportJobRequestView {
	this := ApiAtlasDiskBackupExportJobRequestView{}
	return &this
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *ApiAtlasDiskBackupExportJobRequestView) GetCustomData() []ApiAtlasLabelView {
	if o == nil || isNil(o.CustomData) {
		var ret []ApiAtlasLabelView
		return ret
	}
	return o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasDiskBackupExportJobRequestView) GetCustomDataOk() ([]ApiAtlasLabelView, bool) {
	if o == nil || isNil(o.CustomData) {
    return nil, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *ApiAtlasDiskBackupExportJobRequestView) HasCustomData() bool {
	if o != nil && !isNil(o.CustomData) {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given []ApiAtlasLabelView and assigns it to the CustomData field.
func (o *ApiAtlasDiskBackupExportJobRequestView) SetCustomData(v []ApiAtlasLabelView) {
	o.CustomData = v
}

// GetExportBucketId returns the ExportBucketId field value
func (o *ApiAtlasDiskBackupExportJobRequestView) GetExportBucketId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExportBucketId
}

// GetExportBucketIdOk returns a tuple with the ExportBucketId field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasDiskBackupExportJobRequestView) GetExportBucketIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ExportBucketId, true
}

// SetExportBucketId sets field value
func (o *ApiAtlasDiskBackupExportJobRequestView) SetExportBucketId(v string) {
	o.ExportBucketId = v
}

// GetLinks returns the Links field value
func (o *ApiAtlasDiskBackupExportJobRequestView) GetLinks() []Link {
	if o == nil {
		var ret []Link
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasDiskBackupExportJobRequestView) GetLinksOk() ([]Link, bool) {
	if o == nil {
    return nil, false
	}
	return o.Links, true
}

// SetLinks sets field value
func (o *ApiAtlasDiskBackupExportJobRequestView) SetLinks(v []Link) {
	o.Links = v
}

// GetSnapshotId returns the SnapshotId field value
func (o *ApiAtlasDiskBackupExportJobRequestView) GetSnapshotId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value
// and a boolean to check if the value has been set.
func (o *ApiAtlasDiskBackupExportJobRequestView) GetSnapshotIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SnapshotId, true
}

// SetSnapshotId sets field value
func (o *ApiAtlasDiskBackupExportJobRequestView) SetSnapshotId(v string) {
	o.SnapshotId = v
}

func (o ApiAtlasDiskBackupExportJobRequestView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CustomData) {
		toSerialize["customData"] = o.CustomData
	}
	if true {
		toSerialize["exportBucketId"] = o.ExportBucketId
	}
	if true {
		toSerialize["links"] = o.Links
	}
	if true {
		toSerialize["snapshotId"] = o.SnapshotId
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasDiskBackupExportJobRequestView struct {
	value *ApiAtlasDiskBackupExportJobRequestView
	isSet bool
}

func (v NullableApiAtlasDiskBackupExportJobRequestView) Get() *ApiAtlasDiskBackupExportJobRequestView {
	return v.value
}

func (v *NullableApiAtlasDiskBackupExportJobRequestView) Set(val *ApiAtlasDiskBackupExportJobRequestView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasDiskBackupExportJobRequestView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasDiskBackupExportJobRequestView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasDiskBackupExportJobRequestView(val *ApiAtlasDiskBackupExportJobRequestView) *NullableApiAtlasDiskBackupExportJobRequestView {
	return &NullableApiAtlasDiskBackupExportJobRequestView{value: val, isSet: true}
}

func (v NullableApiAtlasDiskBackupExportJobRequestView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasDiskBackupExportJobRequestView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


