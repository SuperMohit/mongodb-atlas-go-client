/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute Collection of settings that configures how a cluster might scale its cluster tier and whether the cluster can scale down. Cluster tier auto-scaling is unavailable for clusters using Low CPU or NVME storage classes.
type ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute struct {
	// Maximum instance size to which your cluster can automatically scale.
	MaxInstanceSize *string `json:"maxInstanceSize,omitempty"`
	// Minimum instance size to which your cluster can automatically scale.
	MinInstanceSize *string `json:"minInstanceSize,omitempty"`
}

// NewApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute instantiates a new ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute() *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute {
	this := ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute{}
	return &this
}

// NewApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingComputeWithDefaults instantiates a new ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingComputeWithDefaults() *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute {
	this := ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute{}
	return &this
}

// GetMaxInstanceSize returns the MaxInstanceSize field value if set, zero value otherwise.
func (o *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) GetMaxInstanceSize() string {
	if o == nil || isNil(o.MaxInstanceSize) {
		var ret string
		return ret
	}
	return *o.MaxInstanceSize
}

// GetMaxInstanceSizeOk returns a tuple with the MaxInstanceSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) GetMaxInstanceSizeOk() (*string, bool) {
	if o == nil || isNil(o.MaxInstanceSize) {
    return nil, false
	}
	return o.MaxInstanceSize, true
}

// HasMaxInstanceSize returns a boolean if a field has been set.
func (o *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) HasMaxInstanceSize() bool {
	if o != nil && !isNil(o.MaxInstanceSize) {
		return true
	}

	return false
}

// SetMaxInstanceSize gets a reference to the given string and assigns it to the MaxInstanceSize field.
func (o *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) SetMaxInstanceSize(v string) {
	o.MaxInstanceSize = &v
}

// GetMinInstanceSize returns the MinInstanceSize field value if set, zero value otherwise.
func (o *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) GetMinInstanceSize() string {
	if o == nil || isNil(o.MinInstanceSize) {
		var ret string
		return ret
	}
	return *o.MinInstanceSize
}

// GetMinInstanceSizeOk returns a tuple with the MinInstanceSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) GetMinInstanceSizeOk() (*string, bool) {
	if o == nil || isNil(o.MinInstanceSize) {
    return nil, false
	}
	return o.MinInstanceSize, true
}

// HasMinInstanceSize returns a boolean if a field has been set.
func (o *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) HasMinInstanceSize() bool {
	if o != nil && !isNil(o.MinInstanceSize) {
		return true
	}

	return false
}

// SetMinInstanceSize gets a reference to the given string and assigns it to the MinInstanceSize field.
func (o *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) SetMinInstanceSize(v string) {
	o.MinInstanceSize = &v
}

func (o ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MaxInstanceSize) {
		toSerialize["maxInstanceSize"] = o.MaxInstanceSize
	}
	if !isNil(o.MinInstanceSize) {
		toSerialize["minInstanceSize"] = o.MinInstanceSize
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute struct {
	value *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute
	isSet bool
}

func (v NullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) Get() *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute {
	return v.value
}

func (v *NullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) Set(val *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute(val *ApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) *NullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute {
	return &NullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute{value: val, isSet: true}
}

func (v NullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasAWSProviderSettingsViewManualAllOfAutoScalingCompute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


