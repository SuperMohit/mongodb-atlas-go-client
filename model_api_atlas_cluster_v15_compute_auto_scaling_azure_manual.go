/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasClusterV15ComputeAutoScalingAzureManual struct for ApiAtlasClusterV15ComputeAutoScalingAzureManual
type ApiAtlasClusterV15ComputeAutoScalingAzureManual struct {
	// Flag that indicates whether someone enabled instance size auto-scaling.  -  Set to `true` to enable instance size auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**. -  Set to `false` to disable instance size automatic scaling. 
	Enabled *bool `json:"enabled,omitempty"`
	// Maximum instance size to which your cluster can automatically scale. MongoDB Cloud requires this parameter if `\"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled\" : true`.
	MaxInstanceSize *string `json:"maxInstanceSize,omitempty"`
	// Minimum instance size to which your cluster can automatically scale. MongoDB Cloud requires this parameter if `\"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled\" : true`.
	MinInstanceSize *string `json:"minInstanceSize,omitempty"`
	// Flag that indicates whether the instance size may scale down. MongoDB Cloud requires this parameter if `\"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled\" : true`. If you enable this option, specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**.
	ScaleDownEnabled *bool `json:"scaleDownEnabled,omitempty"`
}

// NewApiAtlasClusterV15ComputeAutoScalingAzureManual instantiates a new ApiAtlasClusterV15ComputeAutoScalingAzureManual object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasClusterV15ComputeAutoScalingAzureManual() *ApiAtlasClusterV15ComputeAutoScalingAzureManual {
	this := ApiAtlasClusterV15ComputeAutoScalingAzureManual{}
	return &this
}

// NewApiAtlasClusterV15ComputeAutoScalingAzureManualWithDefaults instantiates a new ApiAtlasClusterV15ComputeAutoScalingAzureManual object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasClusterV15ComputeAutoScalingAzureManualWithDefaults() *ApiAtlasClusterV15ComputeAutoScalingAzureManual {
	this := ApiAtlasClusterV15ComputeAutoScalingAzureManual{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMaxInstanceSize returns the MaxInstanceSize field value if set, zero value otherwise.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) GetMaxInstanceSize() string {
	if o == nil || isNil(o.MaxInstanceSize) {
		var ret string
		return ret
	}
	return *o.MaxInstanceSize
}

// GetMaxInstanceSizeOk returns a tuple with the MaxInstanceSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) GetMaxInstanceSizeOk() (*string, bool) {
	if o == nil || isNil(o.MaxInstanceSize) {
    return nil, false
	}
	return o.MaxInstanceSize, true
}

// HasMaxInstanceSize returns a boolean if a field has been set.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) HasMaxInstanceSize() bool {
	if o != nil && !isNil(o.MaxInstanceSize) {
		return true
	}

	return false
}

// SetMaxInstanceSize gets a reference to the given string and assigns it to the MaxInstanceSize field.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) SetMaxInstanceSize(v string) {
	o.MaxInstanceSize = &v
}

// GetMinInstanceSize returns the MinInstanceSize field value if set, zero value otherwise.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) GetMinInstanceSize() string {
	if o == nil || isNil(o.MinInstanceSize) {
		var ret string
		return ret
	}
	return *o.MinInstanceSize
}

// GetMinInstanceSizeOk returns a tuple with the MinInstanceSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) GetMinInstanceSizeOk() (*string, bool) {
	if o == nil || isNil(o.MinInstanceSize) {
    return nil, false
	}
	return o.MinInstanceSize, true
}

// HasMinInstanceSize returns a boolean if a field has been set.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) HasMinInstanceSize() bool {
	if o != nil && !isNil(o.MinInstanceSize) {
		return true
	}

	return false
}

// SetMinInstanceSize gets a reference to the given string and assigns it to the MinInstanceSize field.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) SetMinInstanceSize(v string) {
	o.MinInstanceSize = &v
}

// GetScaleDownEnabled returns the ScaleDownEnabled field value if set, zero value otherwise.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) GetScaleDownEnabled() bool {
	if o == nil || isNil(o.ScaleDownEnabled) {
		var ret bool
		return ret
	}
	return *o.ScaleDownEnabled
}

// GetScaleDownEnabledOk returns a tuple with the ScaleDownEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) GetScaleDownEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.ScaleDownEnabled) {
    return nil, false
	}
	return o.ScaleDownEnabled, true
}

// HasScaleDownEnabled returns a boolean if a field has been set.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) HasScaleDownEnabled() bool {
	if o != nil && !isNil(o.ScaleDownEnabled) {
		return true
	}

	return false
}

// SetScaleDownEnabled gets a reference to the given bool and assigns it to the ScaleDownEnabled field.
func (o *ApiAtlasClusterV15ComputeAutoScalingAzureManual) SetScaleDownEnabled(v bool) {
	o.ScaleDownEnabled = &v
}

func (o ApiAtlasClusterV15ComputeAutoScalingAzureManual) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.MaxInstanceSize) {
		toSerialize["maxInstanceSize"] = o.MaxInstanceSize
	}
	if !isNil(o.MinInstanceSize) {
		toSerialize["minInstanceSize"] = o.MinInstanceSize
	}
	if !isNil(o.ScaleDownEnabled) {
		toSerialize["scaleDownEnabled"] = o.ScaleDownEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasClusterV15ComputeAutoScalingAzureManual struct {
	value *ApiAtlasClusterV15ComputeAutoScalingAzureManual
	isSet bool
}

func (v NullableApiAtlasClusterV15ComputeAutoScalingAzureManual) Get() *ApiAtlasClusterV15ComputeAutoScalingAzureManual {
	return v.value
}

func (v *NullableApiAtlasClusterV15ComputeAutoScalingAzureManual) Set(val *ApiAtlasClusterV15ComputeAutoScalingAzureManual) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasClusterV15ComputeAutoScalingAzureManual) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasClusterV15ComputeAutoScalingAzureManual) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasClusterV15ComputeAutoScalingAzureManual(val *ApiAtlasClusterV15ComputeAutoScalingAzureManual) *NullableApiAtlasClusterV15ComputeAutoScalingAzureManual {
	return &NullableApiAtlasClusterV15ComputeAutoScalingAzureManual{value: val, isSet: true}
}

func (v NullableApiAtlasClusterV15ComputeAutoScalingAzureManual) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasClusterV15ComputeAutoScalingAzureManual) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


