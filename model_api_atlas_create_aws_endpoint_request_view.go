/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasCreateAWSEndpointRequestView Group of Private Endpoint settings.
type ApiAtlasCreateAWSEndpointRequestView struct {
	// Unique string that identifies the private endpoint's network interface that someone added to this private endpoint service.
	Id *string `json:"id,omitempty"`
}

// NewApiAtlasCreateAWSEndpointRequestView instantiates a new ApiAtlasCreateAWSEndpointRequestView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasCreateAWSEndpointRequestView() *ApiAtlasCreateAWSEndpointRequestView {
	this := ApiAtlasCreateAWSEndpointRequestView{}
	return &this
}

// NewApiAtlasCreateAWSEndpointRequestViewWithDefaults instantiates a new ApiAtlasCreateAWSEndpointRequestView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasCreateAWSEndpointRequestViewWithDefaults() *ApiAtlasCreateAWSEndpointRequestView {
	this := ApiAtlasCreateAWSEndpointRequestView{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiAtlasCreateAWSEndpointRequestView) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasCreateAWSEndpointRequestView) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiAtlasCreateAWSEndpointRequestView) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiAtlasCreateAWSEndpointRequestView) SetId(v string) {
	o.Id = &v
}

func (o ApiAtlasCreateAWSEndpointRequestView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasCreateAWSEndpointRequestView struct {
	value *ApiAtlasCreateAWSEndpointRequestView
	isSet bool
}

func (v NullableApiAtlasCreateAWSEndpointRequestView) Get() *ApiAtlasCreateAWSEndpointRequestView {
	return v.value
}

func (v *NullableApiAtlasCreateAWSEndpointRequestView) Set(val *ApiAtlasCreateAWSEndpointRequestView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasCreateAWSEndpointRequestView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasCreateAWSEndpointRequestView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasCreateAWSEndpointRequestView(val *ApiAtlasCreateAWSEndpointRequestView) *NullableApiAtlasCreateAWSEndpointRequestView {
	return &NullableApiAtlasCreateAWSEndpointRequestView{value: val, isSet: true}
}

func (v NullableApiAtlasCreateAWSEndpointRequestView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasCreateAWSEndpointRequestView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


