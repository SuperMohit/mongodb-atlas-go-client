/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasOnDemandCpsSnapshotSourceViewAllOf struct for ApiAtlasOnDemandCpsSnapshotSourceViewAllOf
type ApiAtlasOnDemandCpsSnapshotSourceViewAllOf struct {
	// Human-readable name that identifies the cluster.
	ClusterName *string `json:"clusterName,omitempty"`
	// Human-readable name that identifies the collection.
	CollectionName *string `json:"collectionName,omitempty"`
	// Human-readable name that identifies the database.
	DatabaseName *string `json:"databaseName,omitempty"`
	// Unique 24-hexadecimal character string that identifies the project.
	GroupId *string `json:"groupId,omitempty"`
}

// NewApiAtlasOnDemandCpsSnapshotSourceViewAllOf instantiates a new ApiAtlasOnDemandCpsSnapshotSourceViewAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasOnDemandCpsSnapshotSourceViewAllOf() *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf {
	this := ApiAtlasOnDemandCpsSnapshotSourceViewAllOf{}
	return &this
}

// NewApiAtlasOnDemandCpsSnapshotSourceViewAllOfWithDefaults instantiates a new ApiAtlasOnDemandCpsSnapshotSourceViewAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasOnDemandCpsSnapshotSourceViewAllOfWithDefaults() *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf {
	this := ApiAtlasOnDemandCpsSnapshotSourceViewAllOf{}
	return &this
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) GetClusterName() string {
	if o == nil || isNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) GetClusterNameOk() (*string, bool) {
	if o == nil || isNil(o.ClusterName) {
    return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) HasClusterName() bool {
	if o != nil && !isNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetCollectionName returns the CollectionName field value if set, zero value otherwise.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) GetCollectionName() string {
	if o == nil || isNil(o.CollectionName) {
		var ret string
		return ret
	}
	return *o.CollectionName
}

// GetCollectionNameOk returns a tuple with the CollectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) GetCollectionNameOk() (*string, bool) {
	if o == nil || isNil(o.CollectionName) {
    return nil, false
	}
	return o.CollectionName, true
}

// HasCollectionName returns a boolean if a field has been set.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) HasCollectionName() bool {
	if o != nil && !isNil(o.CollectionName) {
		return true
	}

	return false
}

// SetCollectionName gets a reference to the given string and assigns it to the CollectionName field.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) SetCollectionName(v string) {
	o.CollectionName = &v
}

// GetDatabaseName returns the DatabaseName field value if set, zero value otherwise.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) GetDatabaseName() string {
	if o == nil || isNil(o.DatabaseName) {
		var ret string
		return ret
	}
	return *o.DatabaseName
}

// GetDatabaseNameOk returns a tuple with the DatabaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) GetDatabaseNameOk() (*string, bool) {
	if o == nil || isNil(o.DatabaseName) {
    return nil, false
	}
	return o.DatabaseName, true
}

// HasDatabaseName returns a boolean if a field has been set.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) HasDatabaseName() bool {
	if o != nil && !isNil(o.DatabaseName) {
		return true
	}

	return false
}

// SetDatabaseName gets a reference to the given string and assigns it to the DatabaseName field.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) SetDatabaseName(v string) {
	o.DatabaseName = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) GetGroupId() string {
	if o == nil || isNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) GetGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.GroupId) {
    return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) HasGroupId() bool {
	if o != nil && !isNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) SetGroupId(v string) {
	o.GroupId = &v
}

func (o ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ClusterName) {
		toSerialize["clusterName"] = o.ClusterName
	}
	if !isNil(o.CollectionName) {
		toSerialize["collectionName"] = o.CollectionName
	}
	if !isNil(o.DatabaseName) {
		toSerialize["databaseName"] = o.DatabaseName
	}
	if !isNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf struct {
	value *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf
	isSet bool
}

func (v NullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf) Get() *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf {
	return v.value
}

func (v *NullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf) Set(val *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf(val *ApiAtlasOnDemandCpsSnapshotSourceViewAllOf) *NullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf {
	return &NullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf{value: val, isSet: true}
}

func (v NullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasOnDemandCpsSnapshotSourceViewAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


