/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView List that contains the private endpoints through which you connect to MongoDB Cloud when you use **connectionStrings.privateEndpoint[n].connectionString** or **connectionStrings.privateEndpoint[n].srvConnectionString**.
type ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView struct {
	// Unique string that the cloud provider uses to identify the private endpoint.
	EndpointId *string `json:"endpointId,omitempty"`
	// Cloud provider in which MongoDB Cloud deploys the private endpoint.
	ProviderName *string `json:"providerName,omitempty"`
	// Region in which MongoDB Cloud deploys the private endpoint.
	Region *string `json:"region,omitempty"`
}

// NewApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView instantiates a new ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView() *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView {
	this := ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView{}
	return &this
}

// NewApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointViewWithDefaults instantiates a new ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointViewWithDefaults() *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView {
	this := ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView{}
	return &this
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) GetEndpointId() string {
	if o == nil || isNil(o.EndpointId) {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) GetEndpointIdOk() (*string, bool) {
	if o == nil || isNil(o.EndpointId) {
    return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) HasEndpointId() bool {
	if o != nil && !isNil(o.EndpointId) {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) GetProviderName() string {
	if o == nil || isNil(o.ProviderName) {
		var ret string
		return ret
	}
	return *o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) GetProviderNameOk() (*string, bool) {
	if o == nil || isNil(o.ProviderName) {
    return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) HasProviderName() bool {
	if o != nil && !isNil(o.ProviderName) {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given string and assigns it to the ProviderName field.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) SetProviderName(v string) {
	o.ProviderName = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) GetRegion() string {
	if o == nil || isNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) GetRegionOk() (*string, bool) {
	if o == nil || isNil(o.Region) {
    return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) SetRegion(v string) {
	o.Region = &v
}

func (o ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EndpointId) {
		toSerialize["endpointId"] = o.EndpointId
	}
	if !isNil(o.ProviderName) {
		toSerialize["providerName"] = o.ProviderName
	}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return json.Marshal(toSerialize)
}

type NullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView struct {
	value *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView
	isSet bool
}

func (v NullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) Get() *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView {
	return v.value
}

func (v *NullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) Set(val *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView(val *ApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) *NullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView {
	return &NullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView{value: val, isSet: true}
}

func (v NullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAtlasClusterDescriptionConnectionStringsPrivateEndpointEndpointView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


