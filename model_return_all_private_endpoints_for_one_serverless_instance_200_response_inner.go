/*
MongoDB Atlas Administration API

The MongoDB Atlas Administration API allows developers to manage all components in MongoDB Atlas. To learn more, review the [Administration API overview](https://www.mongodb.com/docs/atlas/api/atlas-admin-api/). This OpenAPI specification covers all of the collections with the exception of Alerts, Alert Configurations, and Events. Refer to the [legacy documentation](https://www.mongodb.com/docs/atlas/reference/api-resources/) for the specifications of these resources.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner - struct for ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner
type ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner struct {
	ApiAtlasServerlessAWSTenantEndpointView *ApiAtlasServerlessAWSTenantEndpointView
	ApiAtlasServerlessAzureTenantEndpointView *ApiAtlasServerlessAzureTenantEndpointView
}

// ApiAtlasServerlessAWSTenantEndpointViewAsReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner is a convenience function that returns ApiAtlasServerlessAWSTenantEndpointView wrapped in ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner
func ApiAtlasServerlessAWSTenantEndpointViewAsReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner(v *ApiAtlasServerlessAWSTenantEndpointView) ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner {
	return ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner{
		ApiAtlasServerlessAWSTenantEndpointView: v,
	}
}

// ApiAtlasServerlessAzureTenantEndpointViewAsReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner is a convenience function that returns ApiAtlasServerlessAzureTenantEndpointView wrapped in ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner
func ApiAtlasServerlessAzureTenantEndpointViewAsReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner(v *ApiAtlasServerlessAzureTenantEndpointView) ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner {
	return ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner{
		ApiAtlasServerlessAzureTenantEndpointView: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ApiAtlasServerlessAWSTenantEndpointView
	err = newStrictDecoder(data).Decode(&dst.ApiAtlasServerlessAWSTenantEndpointView)
	if err == nil {
		jsonApiAtlasServerlessAWSTenantEndpointView, _ := json.Marshal(dst.ApiAtlasServerlessAWSTenantEndpointView)
		if string(jsonApiAtlasServerlessAWSTenantEndpointView) == "{}" { // empty struct
			dst.ApiAtlasServerlessAWSTenantEndpointView = nil
		} else {
			match++
		}
	} else {
		dst.ApiAtlasServerlessAWSTenantEndpointView = nil
	}

	// try to unmarshal data into ApiAtlasServerlessAzureTenantEndpointView
	err = newStrictDecoder(data).Decode(&dst.ApiAtlasServerlessAzureTenantEndpointView)
	if err == nil {
		jsonApiAtlasServerlessAzureTenantEndpointView, _ := json.Marshal(dst.ApiAtlasServerlessAzureTenantEndpointView)
		if string(jsonApiAtlasServerlessAzureTenantEndpointView) == "{}" { // empty struct
			dst.ApiAtlasServerlessAzureTenantEndpointView = nil
		} else {
			match++
		}
	} else {
		dst.ApiAtlasServerlessAzureTenantEndpointView = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ApiAtlasServerlessAWSTenantEndpointView = nil
		dst.ApiAtlasServerlessAzureTenantEndpointView = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) MarshalJSON() ([]byte, error) {
	if src.ApiAtlasServerlessAWSTenantEndpointView != nil {
		return json.Marshal(&src.ApiAtlasServerlessAWSTenantEndpointView)
	}

	if src.ApiAtlasServerlessAzureTenantEndpointView != nil {
		return json.Marshal(&src.ApiAtlasServerlessAzureTenantEndpointView)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ApiAtlasServerlessAWSTenantEndpointView != nil {
		return obj.ApiAtlasServerlessAWSTenantEndpointView
	}

	if obj.ApiAtlasServerlessAzureTenantEndpointView != nil {
		return obj.ApiAtlasServerlessAzureTenantEndpointView
	}

	// all schemas are nil
	return nil
}

type NullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner struct {
	value *ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner
	isSet bool
}

func (v NullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) Get() *ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner {
	return v.value
}

func (v *NullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) Set(val *ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner(val *ReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) *NullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner {
	return &NullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner{value: val, isSet: true}
}

func (v NullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnAllPrivateEndpointsForOneServerlessInstance200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


